colnames(data)<-as.character(variable.names$V2)
col<-c(grep("std()",colnames(data),fixed=T,value=T),
grep("mean()",colnames(data),fixed=T,value=T))
data<-data[col]
test.activity<-read.table("test/y_test.txt")
train.activity<-read.table("train/y_train.txt")
data.activity<-rbind(train.activity,test.activity)
test.subject<-read.table("test/subject_test.txt")
train.subject<-read.table("train/subject_train.txt")
data.subject<-rbind(train.subject,test.subject)
data<-cbind(data.subject,data.activity,data)
unique(data$V1)
unique(data$V2)
data[1]
data[2]
data<-merge(activity.names,data,by.y=data[2])
activity.names<-read.table("activity_labels.txt")
data<-merge(activity.names,data,by.y=data[2])
data<-cbind(data.subject,data.activity,data)
colnames(data)[c(1,2)]=c("activity","subject")
View(data)
rm(list=ls())
#Download the dataset from this link: https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#Unzip the dataset and navigate into the UCI HAR Dataset folder and set it as your working directory
#Merges the training and the test sets to create one data set.
test<-read.table("test/X_test.txt")
train<-read.table("train/X_train.txt")
data<-rbind(train,test)
#Appropriately labels the columns of our data set with descriptive measurement names.
variable.names<-read.table("features.txt")
colnames(data)<-as.character(variable.names$V2)
#Extracts only the mean and standard deviation measurement.
col<-c(grep("std()",colnames(data),fixed=T,value=T),
grep("mean()",colnames(data),fixed=T,value=T))
data<-data[col]
#Labels our data with the activity performed when the data was measured and the subject performing the activity.
test.activity<-read.table("test/y_test.txt")
train.activity<-read.table("train/y_train.txt")
data.activity<-rbind(train.activity,test.activity)
test.subject<-read.table("test/subject_test.txt")
train.subject<-read.table("train/subject_train.txt")
data.subject<-rbind(train.subject,test.subject)
data<-cbind(data.subject,data.activity,data)
colnames(data)[c(1,2)]=c("activity","subject")
unique(data$activity)
unique(data$subject)
data<-cbind(data.subject,data.activity,data)
colnames(data)[1]=c("subject")
rm(data)
data<-cbind(data.subject,data.activity,data)
colnames(data)[1]=c("subject")
#Download the dataset from this link: https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
#Unzip the dataset and navigate into the UCI HAR Dataset folder and set it as your working directory
#Merges the training and the test sets to create one data set.
test<-read.table("test/X_test.txt")
train<-read.table("train/X_train.txt")
data<-rbind(train,test)
#Appropriately labels the columns of our data set with descriptive measurement names.
variable.names<-read.table("features.txt")
colnames(data)<-as.character(variable.names$V2)
#Extracts only the mean and standard deviation measurement.
col<-c(grep("std()",colnames(data),fixed=T,value=T),
grep("mean()",colnames(data),fixed=T,value=T))
data<-data[col]
#Labels our data with the activity performed when the data was measured and the subject performing the activity.
test.activity<-read.table("test/y_test.txt")
train.activity<-read.table("train/y_train.txt")
data.activity<-rbind(train.activity,test.activity)
test.subject<-read.table("test/subject_test.txt")
train.subject<-read.table("train/subject_train.txt")
data.subject<-rbind(train.subject,test.subject)
data<-cbind(data.subject,data.activity,data)
colnames(data)[1]=c("subject")
activity.names<-read.table("activity_labels.txt")
data<-merge(activity.names,data)
View(data)
data$V1=NULL
View(data)
colnames(data)[1]=c("activity")
View(data)
i<-interaction(data$subject,data$activity)
tidydata<-by(data[,3:68],i,colMeans)
tidydata<-do.call(rbind,tidydata)
View(tidydata)
View(tidydata)
View(data)
strsplit(tidydata$row.names)
strsplit(tidydata[row.names])
tidydata
rownames(tidydata)
strsplit(rownames(tidydata))
strsplit(rownames(tidydata),".")
strsplit(rownames(tidydata),split=".")
strsplit(rownames(tidydata),split="'.'")
strsplit(rownames(tidydata),split="0")
strsplit(rownames(tidydata),split='.')
rownames(tidydata)
a<-"lol.ha"
strsplit(a,".")
strsplit(a,.)
strsplit(a," .")
strsplit(a,'.')
strsplit(a,'[.]')
strsplit(rownames(tidydata),split='[.]')
unlist(strsplit(rownames(tidydata),split='[.]'))
strsplit(rownames(tidydata),split='[.]')
a<-strsplit(rownames(tidydata),split='[.]')
a
a[1]
?aggregate
aggregate(data,subject.activity.colMeans)
aggregate(data,subject.activity.fun=colMeans)
aggregate(data,subject.activity.FUN=colMeans)
aggregate(data,subject.activity.FUN=colMeans())
aggregate(data,subject,activity.FUN=colMeans())
aggregate(data,subject,activity.FUN=colMeans)
aggregate(data,subject,activity,FUN=colMeans)
aggregate(data,data$subject,data$activity,FUN=colMeans)
aggregate(data,by=c(data$subject,data$activity),FUN=colMeans)
aggregate(data,by=list(data$subject,data$activity),FUN=colMeans)
aggregate(data,by=list(data$subject,data$activity),FUN=mean)
a<-aggregate(data,by=list(data$subject,data$activity),FUN=mean)
warnings()
a<-aggregate(data[,3:68],by=list(data$subject,data$activity),FUN=mean)
View(a)
a<-aggregate(data[,3:68],by=list(subject,activity),FUN=mean)
tidydata<-aggregate(data[,3:68],by=list(data$subject,data$activity),FUN=mean)
colNames(tidydata)
colName(tidydata)
colnames(tidydata)
colnames(tidydata)[c(1,2)]=c("subject","activity")
source('~/R Files/Getting and Cleaning Data/Course Project/Human Activity Recognition using SmartPhones/run_analysis.R')
b<-read.table(TidyData.txt)
b<-read.table("TidyData.txt")
View(b)
View(a)
View(tidydata)
colnames(b)
?read.table
?filter
?Filter
View(tidydata)
colnames(tidydata)
rm(list=ls())
setwd("~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant")
#Download the dataset from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip
#Unzip the folder into your working directory
SCC<-readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
NEI<-readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
#Creates two dataframes with the emissions data for Baltimore and Los Angeles
BALT.EI<-subset(NEI,NEI$fips=="24510")
LA.EI<-subset(NEI,NEI$fips=="06037")
#Finds all types of vehicle related emission sources using EI.Sector in the Source Classification Code
vtype<-grep("Vehicle",levels(SCC$EI.Sector),value=T)
#Subsets Source Classification Code to include only vehicle related emission sources
vsource<-SCC$EI.Sector %in% vtype
SCC<-subset(SCC,vsource)
#Subsets the Baltimore dataframe to only include data from vehicle related emission sources
balt.source<-BALT.EI$SCC %in% SCC$SCC
BALT.EI<-subset(BALT.EI,balt.source)
#Subsets the Los Angeles dataframe to only include data from vehicle related emission sources
la.source<-LA.EI$SCC %in% SCC$SCC
LA.EI<-subset(LA.EI,la.source)
LA.Em<-aggregate(LA.EI$Emissions,list(La.EI$years),sum)
LA.Em<-aggregate(LA.EI$Emissions,list(LA.EI$years),sum)
g<-ggplot(BALT.EI,aes(year,Emissions))
g+
stat_summary(fun.y=sum, geom="line") +
stat_summary(data=LA.EI,aes(y=Emissions),fun.y=sum, geom="line") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
?aggregate
LA.Em<-aggregate(LA.EI$Emissions,by=list(LA.EI$years),sum)
LA.Em<-aggregate(x=LA.EI$Emissions,by=list(LA.EI$years),FUN=sum)
length(LA.EI$Emissions)
length(LA.EI$year)
LA.Em<-aggregate(x=LA.EI$Emissions,by=list(LA.EI$year),FUN=sum)
BALT.Em<-aggregate(x=BALT.EI$Emissions,by=list(BALT.EI$year),FUN=sum)
colnames(LA.Em)=c("year","Emissions")
colnames(BALT.Em)=c("year","Emissions")
g<-ggplot()
g+
geom_smooth(data=BALT.Em, aes(year,Emissions)) +
geom_smooth(data=LA.Em, aes(year,Emissions)) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
g<-ggplot()
g+
geom_smooth(data=BALT.Em, aes(year,Emissions), method="lm") +
geom_smooth(data=LA.Em, aes(year,Emissions), method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
png("plot6.png")
g<-ggplot()
g+
geom_smooth(data=BALT.Em, aes(year,Emissions), method="lm") +
geom_smooth(data=LA.Em, aes(year,Emissions), method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot()
g+
geom_line(data=BALT.Em, aes(year,Emissions)) +
geom_line(data=LA.Em, aes(year,Emissions)) +
geom_smooth(data=BALT.Em, aes(year,Emissions), method="lm") +
geom_smooth(data=LA.Em, aes(year,Emissions), method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot()
g+
geom_point(data=BALT.Em, aes(year,Emissions)) +
geom_point(data=LA.Em, aes(year,Emissions)) +
geom_smooth(data=BALT.Em, aes(year,Emissions), method="lm") +
geom_smooth(data=LA.Em, aes(year,Emissions), method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
rbind(LA.Em,BALT.Em)
LA.em$city=Los Angeles
LA.Em$city=Los Angeles
LA.Em$city="Los Angeles"
LA.Em
BALT.Em$city="Baltimore"
rbind(LA.Em,BALT.Em)
LA.Em<-aggregate(x=LA.EI$Emissions,by=list(LA.EI$year),FUN=sum)
BALT.Em<-aggregate(x=BALT.EI$Emissions,by=list(BALT.EI$year),FUN=sum)
colnames(LA.Em)=c("year","Emissions")
colnames(BALT.Em)=c("year","Emissions")
LA.Em$city="Los Angeles"
BALT.Em$city="Baltimore"
data<-rbind(LA.Em,BALT.Em)
png("plot6.png")
g<-ggplot()
g+
geom_point(data=data, aes(year,Emissions),city) +
geom_smooth(data=data, aes(year,Emissions), city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=city)
g+
geom_point() +
geom_smooth() +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=city)
g+
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=city)
g+
geom_point() +
geom_smooth(method="lm",color=city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=city)
g+
geom_point() +
geom_smooth(method="lm",color=data$city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=city)
g+
geom_point() +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions),color=variable)
g+
geom_point() +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions))
g+
geom_point() +
facet_grid(.~city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions))
g+
geom_point() +
geom_smooth()
facet_grid(.~city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions))
g+
geom_point() +
geom_smooth(method="lm")
facet_grid(.~city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions))
g+
geom_point() +
facet_grid(.~city) +
geom_smooth(method="lm")
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008")
dev.off()
png("plot6.png")
g<-ggplot(data=data, aes(year,Emissions))
g+
geom_point() +
facet_grid(.~city) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Baltimore vs Los Angeles \n PM2.5 Vehicle Emissions from 1999 to 2008") +
geom_smooth(method="lm")
dev.off()
colnames(data)
colnames(data)=c("lol","wjat","loll")
source('~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant/plot5.R')
png("plot5.png")
g <- ggplot(BALT.Em, aes(year, Emissions))
g+
geom_point() +
geom_smooth() +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Vehicle Related PM2.5 Emissions in Baltimore from 1999 to 2008")
dev.off()
png("plot5.png")
g <- ggplot(BALT.Em, aes(year, Emissions))
g+
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Vehicle Related PM2.5 Emissions in Baltimore from 1999 to 2008")
dev.off()
png("plot5.png")
g <- ggplot(BALT.Em, aes(year, Emissions))
g+
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Decrease in Vehicle Related PM2.5 Emissions in Baltimore from 1999 to 2008")
dev.off()
png("plot5.png")
g <- ggplot(BALT.Em, aes(year, Emissions))
g+
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Decrease in Vehicle Related PM2.5 Emissions \n in Baltimore from 1999 to 2008")
dev.off()
SCC <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
NEI <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
#Finds all types of coal related emission sources using EI.Sector in the Source Classification Code
ctype <- grep("Coal", levels(SCC$EI.Sector), value=T)
#Finds all coal related emission sources that are also combustion related
ctype <- grep("Comb", ctype, value=T)
#Subsets Source Classification Code to include only coal combustion related emission sources
csource <- SCC$EI.Sector %in% ctype
SCC <- subset(SCC, csource)
#Subsets NEI to only include data from coal combustion related emission sources
NEI.source <- NEI$SCC %in% SCC$SCC
NEI <- subset(NEI, NEI.source)
NEI <- aggregate( x = NEI$Emissions, by = list(NEI$year), FUN = sum)
colnames(NEI) = c( "year", "Emissions")
png("plot4.png")
g <- ggplot(NEI, aes(year,Emissions))
g+
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Decrease in Coal Combustion Related PM2.5 Emissions \n in US from 1999 to 2008")
dev.off()
png("plot4.png")
g <- ggplot(NEI, aes(year,Emissions))
g+
geom_point() +
geom_smooth(method="lm", se=F) +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Decrease in Coal Combustion Related PM2.5 Emissions \n in US from 1999 to 2008")
dev.off()
#Download the dataset from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip
#Unzip the folder into your working directory
NEI<-readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
#Creates a dataframe with the emissions data for only Baltimore
BALT.EI<-subset(NEI,NEI$fips=="24510")
#Creates a dataframe containing the calculated total emissions per year, per source in Baltimore
BALT.Em <- aggregate( x = BALT.EI$Emissions, by = list(BALT.EI$year,BALT.EI$type), FUN = sum)
balt.em
BALT.Em
BALT.Em <- aggregate( x = BALT.EI$Emissions, by = list(BALT.EI$year,BALT.EI$type), FUN = sum)
colnames(BALT.Em) = c( "year", "type", "Emissions")
png("plot3.png",width=1080)
g<-ggplot(BALT.Em,aes(year,Emissions))
g+
facet_grid(.~type) +
geom_point() +
geom_smooth(method="lm") +
ylab("PM2.5 Emissions (in tons)") +
xlab("Year") +
scale_x_continuous(breaks=seq(1999, 2008, 3)) +
ggtitle("Total PM2.5 Emissions in Baltimore from 1999 to 2008 by Source")
dev.off()
source('~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant/plot2.R')
source('~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant/plot1.R')
source('~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant/plot2.R')
source('~/R Files/Exploratory Data Analysis/Course Project 2/Analysis of Fine Particle Matter Pollutant/plot2.R')
png("plot2.png")
par(mar=c(5,5,5,5))
plot(
x = as.numeric(names(balt.TYE)),
y = balt.TYE,
main = "Decrease in Total PM2.5 Emissions in Baltimore from 1999 to 2008",
type = "l",
ylab = "Total PM2.5 Emissions (in tons)",
xlab = "Year",
xaxp = c(1999,2008,3)
)
abline(lm(balt.TYE~as.numeric(names(balt.TYE))),col="blue")
dev.off()
png("plot2.png")
par(mar=c(5,5,5,5))
plot(
x = as.numeric(names(balt.TYE)),
y = balt.TYE,
main = "Decrease in Total PM2.5 Emissions in Baltimore from 1999 to 2008",
type = "p",
ylab = "Total PM2.5 Emissions (in tons)",
xlab = "Year",
xaxp = c(1999,2008,3)
)
abline(lm(balt.TYE~as.numeric(names(balt.TYE))),col="blue")
dev.off()
#Creates a dataframe with the total yearly emission in the US
total.yearly.emissions <- tapply(NEI$Emissions,NEI$year,sum)
png("plot1.png")
par(mar=c(5,5,5,5))
plot(
x = as.numeric(names(total.yearly.emissions)),
y = total.yearly.emissions,
main = "Decrease in Total PM2.5 Emissions in the US from 1999 to 2008",
type = "p",
ylab = "Total PM2.5 Emissions (in tons)",
xlab = "Year",
xaxp = c(1999,2008,3)
)
abline(lm(total.yearly.emissions~as.numeric(names(total.yearly.emissions))),col="blue")
dev.off()
